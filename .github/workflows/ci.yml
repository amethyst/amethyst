name: CI

on:
  push:
    branches:
      - master
      # bors needs CI to trigger for pushes to its staging/trying branches
      - staging
      - trying
  pull_request:

env:
  RUSTFLAGS: -Cdebuginfo=0
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  tests:
    name: Tests
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.toolchain == 'nightly' }}
    env:
      FEATURES: ui,tiles,gltf
    strategy:
      fail-fast: true
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        toolchain: [stable, beta, nightly]
        include:
        - os: macos-latest
          BACKEND: metal
          MACOS: true
        - os: windows-latest
          BACKEND: vulkan
        - os: ubuntu-latest
          BACKEND: vulkan
    steps:
      - uses: actions/checkout@v2

      - name: install linux deps
        run: |
          sudo apt update
          sudo apt install gcc pkg-config openssl libasound2-dev cmake build-essential python3 libfreetype6-dev libexpat1-dev libxcb-composite0-dev libssl-dev libx11-dev pulseaudio
        if: contains(matrix.os, 'ubuntu')

      - name: install ${{ matrix.toolchain }} toolchain
        id: install_toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          profile: minimal
          override: true

      - run: rustup component add rustfmt
        if: matrix.toolchain == 'nightly' && matrix.os == 'ubuntu-latest'

      - run: cargo +nightly fmt --all -- --check
        if: matrix.toolchain == 'nightly' && matrix.os == 'ubuntu-latest'
        
      - run: rustup component add clippy
        if: matrix.toolchain == 'nightly'

      - run: cargo +nightly clippy -Z unstable-options --workspace --all-targets --features=$FEATURES,${{ matrix.BACKEND }}
        if: matrix.toolchain == 'nightly'

      - name: clean clippy-generated amethyst libs
        # Remove the clippy-generated amethyst files.
        # They mess up `mdbook test` later on for some reason
        run: rm -rf ./target/debug/deps/libamethyst*
        if: matrix.toolchain == 'stable' && matrix.os == 'ubuntu-latest'

      - run: cargo test --workspace --all-targets --features=$FEATURES,${{ matrix.BACKEND }}
        env:
          MACOS: ${{ matrix.MACOS }} # Used by some tests

      - name: install mdbook on stable, ubuntu-latest
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: 'latest'
        if: matrix.toolchain == 'stable' && matrix.os == 'ubuntu-latest'

      # Should be working, but postponing until after we go live with GitHub Actions
      # - name: install mdbook-linkcheck on stable, ubuntu-latest
      #   env:
      #     LINKCHECK_URL: https://github.com/Michael-F-Bryan/mdbook-linkcheck/releases/download/v0.7.0/mdbook-linkcheck-v0.7.0-x86_64-unknown-linux-gnu.tar.gz
      #   run: |
      #     curl -L ${{ env.LINKCHECK_URL }} | tar -C ~/.cargo/bin -xzf -
      #     echo -e "\n\n[output.linkcheck]" >> book/book.toml ## PROBABLY REMOVE THIS IN FAVOR OF ALWAYS HAVING IT AS OPTIONAL IN THE CONFIG
      #   if: matrix.toolchain == 'stable' && matrix.os == 'ubuntu-latest'

      - run: mdbook build book
        if: matrix.toolchain == 'stable' && matrix.os == 'ubuntu-latest'

      - run: mdbook test -L ./target/debug/deps book
        if: matrix.toolchain == 'stable' && matrix.os == 'ubuntu-latest'
